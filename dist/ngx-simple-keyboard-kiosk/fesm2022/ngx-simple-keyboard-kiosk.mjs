import * as i0 from '@angular/core';
import { Injectable, EventEmitter, Component, Inject, ViewChild, Input, Output, NgModule } from '@angular/core';
import { DOCUMENT } from '@angular/common';
import Keyboard from 'simple-keyboard';
import SimpleKeyboardLayouts from 'simple-keyboard-layouts';
import englishLayout from 'simple-keyboard-layouts/build/layouts/english';
import georgianlayout from 'simple-keyboard-layouts/build/layouts/georgian';

class CountryService {
    constructor() {
        this.countries = new Map([
            ['georgian', '<svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 32 32"><rect x="1" y="4" width="30" height="24" rx="4" ry="4" fill="#fff"></rect><path fill="#ea3323" d="M31 14L18 14 18 4 14 4 14 14 1 14 1 18 14 18 14 28 18 28 18 18 31 18 31 14z"></path><path d="M27,4H5c-2.209,0-4,1.791-4,4V24c0,2.209,1.791,4,4,4H27c2.209,0,4-1.791,4-4V8c0-2.209-1.791-4-4-4Zm3,20c0,1.654-1.346,3-3,3H5c-1.654,0-3-1.346-3-3V8c0-1.654,1.346-3,3-3H27c1.654,0,3,1.346,3,3V24Z" opacity=".15"></path><path d="M10,8.141c-.619,.124-1.246,.202-1.874,.233,.031-.628,.109-1.254,.233-1.874-.57,.075-1.148,.075-1.718,0,.124,.619,.202,1.246,.233,1.874-.628-.031-1.254-.109-1.874-.233,.075,.57,.075,1.148,0,1.718,.619-.124,1.246-.202,1.874-.233-.031,.628-.109,1.254-.233,1.874,.57-.075,1.148-.075,1.718,0-.124-.619-.202-1.246-.233-1.874,.628,.031,1.254,.109,1.874,.233-.075-.57-.075-1.148,0-1.718Z" fill="#ea3323"></path><path d="M22,8.141c.619,.124,1.246,.202,1.874,.233-.031-.628-.109-1.254-.233-1.874,.57,.075,1.148,.075,1.718,0-.124,.619-.202,1.246-.233,1.874,.628-.031,1.254-.109,1.874-.233-.075,.57-.075,1.148,0,1.718-.619-.124-1.246-.202-1.874-.233,.031,.628,.109,1.254,.233,1.874-.57-.075-1.148-.075-1.718,0,.124-.619,.202-1.246,.233-1.874-.628,.031-1.254,.109-1.874,.233,.075-.57,.075-1.148,0-1.718Z" fill="#ea3323"></path><path d="M10,23.859c-.619-.124-1.246-.202-1.874-.233,.031,.628,.109,1.254,.233,1.874-.57-.075-1.148-.075-1.718,0,.124-.619,.202-1.246,.233-1.874-.628,.031-1.254,.109-1.874,.233,.075-.57,.075-1.148,0-1.718,.619,.124,1.246,.202,1.874,.233-.031-.628-.109-1.254-.233-1.874,.57,.075,1.148,.075,1.718,0-.124,.619-.202,1.246-.233,1.874,.628-.031,1.254-.109,1.874-.233-.075,.57-.075,1.148,0,1.718Z" fill="#ea3323"></path><path d="M22,23.859c.619-.124,1.246-.202,1.874-.233-.031,.628-.109,1.254-.233,1.874,.57-.075,1.148-.075,1.718,0-.124-.619-.202-1.246-.233-1.874,.628,.031,1.254,.109,1.874,.233-.075-.57-.075-1.148,0-1.718-.619,.124-1.246,.202-1.874,.233,.031-.628,.109-1.254,.233-1.874-.57,.075-1.148,.075-1.718,0,.124,.619,.202,1.246,.233,1.874-.628-.031-1.254-.109-1.874-.233,.075,.57,.075,1.148,0,1.718Z" fill="#ea3323"></path><path d="M27,5H5c-1.657,0-3,1.343-3,3v1c0-1.657,1.343-3,3-3H27c1.657,0,3,1.343,3,3v-1c0-1.657-1.343-3-3-3Z" fill="#fff" opacity=".2"></path></svg>'],
            ['english', '<svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 32 32"><rect x="1" y="4" width="30" height="24" rx="4" ry="4" fill="#fff"></rect><path d="M1.638,5.846H30.362c-.711-1.108-1.947-1.846-3.362-1.846H5c-1.414,0-2.65,.738-3.362,1.846Z" fill="#a62842"></path><path d="M2.03,7.692c-.008,.103-.03,.202-.03,.308v1.539H31v-1.539c0-.105-.022-.204-.03-.308H2.03Z" fill="#a62842"></path><path fill="#a62842" d="M2 11.385H31V13.231H2z"></path><path fill="#a62842" d="M2 15.077H31V16.923000000000002H2z"></path><path fill="#a62842" d="M1 18.769H31V20.615H1z"></path><path d="M1,24c0,.105,.023,.204,.031,.308H30.969c.008-.103,.031-.202,.031-.308v-1.539H1v1.539Z" fill="#a62842"></path><path d="M30.362,26.154H1.638c.711,1.108,1.947,1.846,3.362,1.846H27c1.414,0,2.65-.738,3.362-1.846Z" fill="#a62842"></path><path d="M5,4h11v12.923H1V8c0-2.208,1.792-4,4-4Z" fill="#102d5e"></path><path d="M27,4H5c-2.209,0-4,1.791-4,4V24c0,2.209,1.791,4,4,4H27c2.209,0,4-1.791,4-4V8c0-2.209-1.791-4-4-4Zm3,20c0,1.654-1.346,3-3,3H5c-1.654,0-3-1.346-3-3V8c0-1.654,1.346-3,3-3H27c1.654,0,3,1.346,3,3V24Z" opacity=".15"></path><path d="M27,5H5c-1.657,0-3,1.343-3,3v1c0-1.657,1.343-3,3-3H27c1.657,0,3,1.343,3,3v-1c0-1.657-1.343-3-3-3Z" fill="#fff" opacity=".2"></path><path fill="#fff" d="M4.601 7.463L5.193 7.033 4.462 7.033 4.236 6.338 4.01 7.033 3.279 7.033 3.87 7.463 3.644 8.158 4.236 7.729 4.827 8.158 4.601 7.463z"></path><path fill="#fff" d="M7.58 7.463L8.172 7.033 7.441 7.033 7.215 6.338 6.989 7.033 6.258 7.033 6.849 7.463 6.623 8.158 7.215 7.729 7.806 8.158 7.58 7.463z"></path><path fill="#fff" d="M10.56 7.463L11.151 7.033 10.42 7.033 10.194 6.338 9.968 7.033 9.237 7.033 9.828 7.463 9.603 8.158 10.194 7.729 10.785 8.158 10.56 7.463z"></path><path fill="#fff" d="M6.066 9.283L6.658 8.854 5.927 8.854 5.701 8.158 5.475 8.854 4.744 8.854 5.335 9.283 5.109 9.979 5.701 9.549 6.292 9.979 6.066 9.283z"></path><path fill="#fff" d="M9.046 9.283L9.637 8.854 8.906 8.854 8.68 8.158 8.454 8.854 7.723 8.854 8.314 9.283 8.089 9.979 8.68 9.549 9.271 9.979 9.046 9.283z"></path><path fill="#fff" d="M12.025 9.283L12.616 8.854 11.885 8.854 11.659 8.158 11.433 8.854 10.702 8.854 11.294 9.283 11.068 9.979 11.659 9.549 12.251 9.979 12.025 9.283z"></path><path fill="#fff" d="M6.066 12.924L6.658 12.494 5.927 12.494 5.701 11.799 5.475 12.494 4.744 12.494 5.335 12.924 5.109 13.619 5.701 13.19 6.292 13.619 6.066 12.924z"></path><path fill="#fff" d="M9.046 12.924L9.637 12.494 8.906 12.494 8.68 11.799 8.454 12.494 7.723 12.494 8.314 12.924 8.089 13.619 8.68 13.19 9.271 13.619 9.046 12.924z"></path><path fill="#fff" d="M12.025 12.924L12.616 12.494 11.885 12.494 11.659 11.799 11.433 12.494 10.702 12.494 11.294 12.924 11.068 13.619 11.659 13.19 12.251 13.619 12.025 12.924z"></path><path fill="#fff" d="M13.539 7.463L14.13 7.033 13.399 7.033 13.173 6.338 12.947 7.033 12.216 7.033 12.808 7.463 12.582 8.158 13.173 7.729 13.765 8.158 13.539 7.463z"></path><path fill="#fff" d="M4.601 11.104L5.193 10.674 4.462 10.674 4.236 9.979 4.01 10.674 3.279 10.674 3.87 11.104 3.644 11.799 4.236 11.369 4.827 11.799 4.601 11.104z"></path><path fill="#fff" d="M7.58 11.104L8.172 10.674 7.441 10.674 7.215 9.979 6.989 10.674 6.258 10.674 6.849 11.104 6.623 11.799 7.215 11.369 7.806 11.799 7.58 11.104z"></path><path fill="#fff" d="M10.56 11.104L11.151 10.674 10.42 10.674 10.194 9.979 9.968 10.674 9.237 10.674 9.828 11.104 9.603 11.799 10.194 11.369 10.785 11.799 10.56 11.104z"></path><path fill="#fff" d="M13.539 11.104L14.13 10.674 13.399 10.674 13.173 9.979 12.947 10.674 12.216 10.674 12.808 11.104 12.582 11.799 13.173 11.369 13.765 11.799 13.539 11.104z"></path><path fill="#fff" d="M4.601 14.744L5.193 14.315 4.462 14.315 4.236 13.619 4.01 14.315 3.279 14.315 3.87 14.744 3.644 15.44 4.236 15.01 4.827 15.44 4.601 14.744z"></path><path fill="#fff" d="M7.58 14.744L8.172 14.315 7.441 14.315 7.215 13.619 6.989 14.315 6.258 14.315 6.849 14.744 6.623 15.44 7.215 15.01 7.806 15.44 7.58 14.744z"></path><path fill="#fff" d="M10.56 14.744L11.151 14.315 10.42 14.315 10.194 13.619 9.968 14.315 9.237 14.315 9.828 14.744 9.603 15.44 10.194 15.01 10.785 15.44 10.56 14.744z"></path><path fill="#fff" d="M13.539 14.744L14.13 14.315 13.399 14.315 13.173 13.619 12.947 14.315 12.216 14.315 12.808 14.744 12.582 15.44 13.173 15.01 13.765 15.44 13.539 14.744z"></path></svg>'],
            ['arabic', '<svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 32 32"><rect x="1" y="4" width="30" height="24" rx="4" ry="4" fill="#215230"></rect><path d="M27,4H5c-2.209,0-4,1.791-4,4V24c0,2.209,1.791,4,4,4H27c2.209,0,4-1.791,4-4V8c0-2.209-1.791-4-4-4Zm3,20c0,1.654-1.346,3-3,3H5c-1.654,0-3-1.346-3-3V8c0-1.654,1.346-3,3-3H27c1.654,0,3,1.346,3,3V24Z" opacity=".15"></path><path d="M27,5H5c-1.657,0-3,1.343-3,3v1c0-1.657,1.343-3,3-3H27c1.657,0,3,1.343,3,3v-1c0-1.657-1.343-3-3-3Z" fill="#fff" opacity=".2"></path><path d="M25.47,15.008c.105-.506-.616-3.171-.092-2.76,.071-.184-.288-.624-.39-.863-.362,1.107,.47,3.281,.2,4.749-.205,.431-1.607,.948-1.937,1.134,.74,.218,2.5-.651,2.218-2.26Z" fill="#fff"></path><path d="M10.505,16.004c.189-.342,.23-.711,.203-1.119,.285-.116,.625-.309,.739-.323-.078,.268,.108,.557,.485,.52,.075,2.143,.346,1.695,.235-.061,.244-.113,.285-.331,.376-.424,.529,.867,1.302-.28,.818-.752-.005,.039-.118,.415-.118,.415,0,0,.108,.114,.113,.17-.117,.14-.654,.045-.621-.172,.026-.059,.152-.363-.028-.182-.163,.166-.247,.518-.574,.578,.021-.738-.397-2.077-.198-2.519,.186,.233,.189,.069,.075-.16-.189-.337-.287-.981-.469-.283,.189,.786,.217,2.078,.349,2.962-.361-.07-.248-.325-.244-.489-.049-.033-.698,.313-.968,.396-.032-.274-.072-.521-.089-.724,1.012-.097,.623-1.314,.414-1.883,.025-.034,.297,.197,.133-.076-.251-.317-.358-.681-.477-.079,.157,.294,.301,1.089,.451,1.42-.103,.073-.337,.195-.569,.188,.019-.348-.281-1.172-.047-1.233,.161,.185,.185,.105,.072-.126-.195-.297-.349-1.048-.488-.321,.167,.343,.096,.842,.207,1.609-.632-.338-.133-1.385-.652-1.885-.024,.057-.13,.41-.13,.41,.515,.73-.338,2.343-1.17,1.331-.098-.544,.476-2.27-.336-.957-.16,.529-.555,2.134-1.013,.927-.089-.336,.098-1.28-.115-.503-.119,.293,.045,1.443,.567,1.308,.471-.253,.488-1.453,.854-1.754-.724,1.53,.977,2.599,1.429,.747,.013,.287,.224,.749,.612,.848,.023,.228,.06,.525,.094,.838-.072,.022-.144,.042-.217,.059-.605-1.576-2.019,.892-.179,.401,.024,.072,.04,.143,.042,.207-.852,1.187-3.966,1.185-1.934-.889,.066,.024,.191,.147,.18,.158,.073-.112,.11-.232-.09-.308,.33-.876-.875-.159-.14,.119-.149,.156-.5,.385-.715,.519-.167,.094-.68,.407-.803,.479-.057,.104,.455-.213,.61-.266-1.488,2.836,2.314,2.381,3.326,.88Zm-3.208-.938c.106-.053,.207-.104,.29-.15-1.363,2.364,2.618,1.812,2.664,.131,.069-.021,.138-.044,.208-.068,.024,.255,.041,.505,.042,.723-.365,.429-1.203,.928-1.945,1.131-1.368,.433-1.852-.966-1.259-1.766Z" fill="#fff"></path><path d="M16.342,16.611c.242-.267,1.915-.721,2.199-.864,.025-.071,.148-.321,.156-.373-.557,.05-2.089,.134-2.7,.103,.126-.108,.736-.422,1.182-.554,.042,.074,.073,.148,.079,.212,.032-.033,.056-.142,.048-.253,.293-.093,.443-.124,.508-.142,.041-.053,.114-.268,.125-.425-.359-.659-1.502-.446-.957,.322-.457,.192-1.222,.541-1.44,.856l-.035,.017c-.009,.017-.069,.266-.089,.343-.262-.782-.341-1.798-.795-2.093-.247,.506,.507,1.512,.517,2.056-.142,.33-1.991,1.757-2.309,.939,1.134-.431,2.304-1.185,1.336-2.289-.01-.041,.115,.017,.188,.02,.053-.113-.348-.347-.448-.46-.089-.016-.103,.303-.102,.38,.123,.179,.492,.887,.586,1.102-.139,.177-.837,.553-1.518,.863,.005-.176,.414-.656,.299-.786-.283,.515-.322-.323-.122-.485,.201-.642-.663,.951-.09,.897-.06,.114-.134,.253-.187,.419-.792,.369-2,.72-2.528,.893,.029-.094,.025-.174-.006-.15-.542,.637-.017-.81-.096-.67-.302,.23-.48,1.59,.087,.861,.44-.099,1.918-.203,2.471-.534,.084,1.499,2.627-.297,2.513-1.062,.064,.906,.55,1.539,1.847,1.609,.003-.103-.038-.425-.038-.425-.164-.023-.579-.086-.68-.326Zm-.913-.73c.257,.005,1.655-.032,1.921-.04-.491,.171-1.171,.271-1.14,.96-.403-.091-.624-.464-.781-.92Z" fill="#fff"></path><path d="M12.822,13.817c.459-.246,.482-1.398,.854-1.685-.765,1.473,1.05,2.445,1.404,.667,.322,1.701,2.18,.64,1.302-.691-.241-.549,.228,.023,.066-.334-.251-.316-.358-.681-.477-.079,.16,.291,.317,1.085,.451,1.42-1.359,.72-.927-1.166-1.428-1.825-.024,.057-.13,.41-.13,.41,.838,1.883-1.884,2.344-.998,.137-.447-.722-.639,1.657-1.145,1.614-.411,0-.413-.913-.358-1.107-.292,.019-.146,1.653,.458,1.473Z" fill="#fff"></path><path d="M23.777,14.233c.057,.949,.148,1.852,.117,2.524,.349-.356,.155-1.494,.145-2.223,.438,.519,.919,1.113,1.024,1.678,.013,.036,.069-.11,.06-.338,.048-.4-.665-1.312-1.115-1.788,.058-.461-.361-1.665-.114-1.934,.161,.186,.185,.105,.072-.126-.194-.304-.337-1.009-.476-.298,.17,.367,.134,1.245,.25,2.057-.385-.43-.627-.687-.828-.906,.011-.189-.181-.792,.017-.716,.161,.185,.185,.105,.072-.127-.205-.324-.348-1.024-.491-.286,.133,.193,.073,.417,.129,.814-.3-.442-.684-.627-.168-.578-.212-.149-1.029-.919-.813-.171,.305,.143,.63,.818,1.022,1.192,.063,.847,.258,2.221,.288,3.015-.809,.711-.96,.011-1.425-.246,.002-.225-.005-.444-.005-.573,.11-.505-.579-3.324-.041-2.908-.042-.23-.467-1.414-.568-.555,.225,.773,.255,2.393,.371,3.462,.011,.101,.024,.291,.035,.497-.002,0-.003-.001-.004-.002-.664,.19-.965,2.265-1.701,1.066,1.334-1.002,.41-3.321,.327-4.613,.008-.082,.139,.112,.207,.126,.049-.187-.281-.67-.399-.912-.476,.972,.751,3.11,.284,4.421,.061-.629-.685-1.392-1.221-1.883,.048-.267-.519-2.128-.024-1.609,.045-.023-.005-.16-.067-.282-.198-.331-.312-.975-.476-.273,.137,.173,.197,1.62,.287,1.904-.317-.37-1.855-1.462-1.123-1.362-.006-.02-.038-.068-.119-.117-.276-.09-.873-.788-.694-.054,.038,.003,.106,.049,.155,.107,.379,.518,1.263,1.37,1.843,1.886,.221,2.776,.599,3.546,.278,.267,.461,.469,.995,.976,1.103,1.565-.097,.201-.238,.38-.445,.525-.058-.379,.005-.686-.05-.715-.115,.07-.081,.556-.059,.79-1.629,.876-1.893,1.088,.063,.311,.679,1.706,1.129-.408,1.804-.783,.018,.016,.033,.025,.051,.04,.007,.215,.008,.399-.001,.459,.09-.001,.139-.14,.165-.33,1.967,1.537,1.697-1.371,1.455-2.888,.33,.384,.542,.608,.806,.888Z" fill="#fff"></path><path d="M22.159,20.66h0s-1.5,0-1.5,0c.115-.083,.176-.205,.159-.327-.01-.077-.087-.135-.181-.143h-.047c-.114,.011-.196,.093-.184,.183l.005,.035,.006,.053c.006,.067,0,.134-.019,.199H9.313c.165,.24,.465,.386,.789,.386l10.116-.006c-.116,.083-.176,.205-.16,.328,.012,.09,.114,.154,.227,.143,.114-.011,.196-.093,.184-.183l-.005-.035-.006-.053c-.006-.067,0-.134,.019-.2h1.248s.035,.058,.035,.058c.031,.053,.071,.1,.117,.142l.064,.053h0c.126,.088,.287,.14,.456,.14,.16,0,.289-.111,.289-.248v-.072c0-.25-.237-.453-.529-.453Z" fill="#fff"></path></svg>'],
            ['armenianEastern', '<svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 32 32"><path fill="#102f9b" d="M1 11H31V21H1z"></path><path d="M5,4H27c2.208,0,4,1.792,4,4v4H1v-4c0-2.208,1.792-4,4-4Z" fill="#c82a20"></path><path d="M5,20H27c2.208,0,4,1.792,4,4v4H1v-4c0-2.208,1.792-4,4-4Z" transform="rotate(180 16 24)" fill="#e8ad3b"></path><path d="M27,4H5c-2.209,0-4,1.791-4,4V24c0,2.209,1.791,4,4,4H27c2.209,0,4-1.791,4-4V8c0-2.209-1.791-4-4-4Zm3,20c0,1.654-1.346,3-3,3H5c-1.654,0-3-1.346-3-3V8c0-1.654,1.346-3,3-3H27c1.654,0,3,1.346,3,3V24Z" opacity=".15"></path><path d="M27,5H5c-1.657,0-3,1.343-3,3v1c0-1.657,1.343-3,3-3H27c1.657,0,3,1.343,3,3v-1c0-1.657-1.343-3-3-3Z" fill="#fff" opacity=".2"></path></svg>'],
            ['armenianWestern', '<svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 32 32"><path fill="#102f9b" d="M1 11H31V21H1z"></path><path d="M5,4H27c2.208,0,4,1.792,4,4v4H1v-4c0-2.208,1.792-4,4-4Z" fill="#c82a20"></path><path d="M5,20H27c2.208,0,4,1.792,4,4v4H1v-4c0-2.208,1.792-4,4-4Z" transform="rotate(180 16 24)" fill="#e8ad3b"></path><path d="M27,4H5c-2.209,0-4,1.791-4,4V24c0,2.209,1.791,4,4,4H27c2.209,0,4-1.791,4-4V8c0-2.209-1.791-4-4-4Zm3,20c0,1.654-1.346,3-3,3H5c-1.654,0-3-1.346-3-3V8c0-1.654,1.346-3,3-3H27c1.654,0,3,1.346,3,3V24Z" opacity=".15"></path><path d="M27,5H5c-1.657,0-3,1.343-3,3v1c0-1.657,1.343-3,3-3H27c1.657,0,3,1.343,3,3v-1c0-1.657-1.343-3-3-3Z" fill="#fff" opacity=".2"></path></svg>'],
            ['assamese', 'assamese'],
            ['balochi', 'balochi'],
            ['belarusian', 'belarusian'],
            ['bengali', 'bengali'],
            ['brazilian', 'brazilian'],
            ['burmese', 'burmese'],
            ['chinese', '<svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 32 32"><rect x="1" y="4" width="30" height="24" rx="4" ry="4" fill="#db362f"></rect><path d="M27,4H5c-2.209,0-4,1.791-4,4V24c0,2.209,1.791,4,4,4H27c2.209,0,4-1.791,4-4V8c0-2.209-1.791-4-4-4Zm3,20c0,1.654-1.346,3-3,3H5c-1.654,0-3-1.346-3-3V8c0-1.654,1.346-3,3-3H27c1.654,0,3,1.346,3,3V24Z" opacity=".15"></path><path fill="#ff0" d="M7.958 10.152L7.19 7.786 6.421 10.152 3.934 10.152 5.946 11.614 5.177 13.979 7.19 12.517 9.202 13.979 8.433 11.614 10.446 10.152 7.958 10.152z"></path><path fill="#ff0" d="M12.725 8.187L13.152 8.898 13.224 8.072 14.032 7.886 13.269 7.562 13.342 6.736 12.798 7.361 12.035 7.037 12.461 7.748 11.917 8.373 12.725 8.187z"></path><path fill="#ff0" d="M14.865 10.372L14.982 11.193 15.37 10.46 16.187 10.602 15.61 10.007 15.997 9.274 15.253 9.639 14.675 9.044 14.793 9.865 14.048 10.23 14.865 10.372z"></path><path fill="#ff0" d="M15.597 13.612L16.25 13.101 15.421 13.13 15.137 12.352 14.909 13.149 14.081 13.179 14.769 13.642 14.541 14.439 15.194 13.928 15.881 14.391 15.597 13.612z"></path><path fill="#ff0" d="M13.26 15.535L13.298 14.707 12.78 15.354 12.005 15.062 12.46 15.754 11.942 16.402 12.742 16.182 13.198 16.875 13.236 16.047 14.036 15.827 13.26 15.535z"></path><path d="M27,5H5c-1.657,0-3,1.343-3,3v1c0-1.657,1.343-3,3-3H27c1.657,0,3,1.343,3,3v-1c0-1.657-1.343-3-3-3Z" fill="#fff" opacity=".2"></path></svg>'],
            ['czech', '<svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 32 32"><path d="M1,24c0,2.209,1.791,4,4,4H27c2.209,0,4-1.791,4-4V15H1v9Z" fill="#c62d25"></path><path d="M27,4H5c-2.209,0-4,1.791-4,4v8H31V8c0-2.209-1.791-4-4-4Z" fill="#fff"></path><path d="M2.316,26.947l13.684-10.947L2.316,5.053c-.803,.732-1.316,1.776-1.316,2.947V24c0,1.172,.513,2.216,1.316,2.947Z" fill="#1e427b"></path><path d="M27,4H5c-2.209,0-4,1.791-4,4V24c0,2.209,1.791,4,4,4H27c2.209,0,4-1.791,4-4V8c0-2.209-1.791-4-4-4Zm3,20c0,1.654-1.346,3-3,3H5c-1.654,0-3-1.346-3-3V8c0-1.654,1.346-3,3-3H27c1.654,0,3,1.346,3,3V24Z" opacity=".15"></path><path d="M27,5H5c-1.657,0-3,1.343-3,3v1c0-1.657,1.343-3,3-3H27c1.657,0,3,1.343,3,3v-1c0-1.657-1.343-3-3-3Z" fill="#fff" opacity=".2"></path></svg>'],
            ['farsi', 'farsi'],
            ['french', '<svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 32 32"><path fill="#fff" d="M10 4H22V28H10z"></path><path d="M5,4h6V28H5c-2.208,0-4-1.792-4-4V8c0-2.208,1.792-4,4-4Z" fill="#092050"></path><path d="M25,4h6V28h-6c-2.208,0-4-1.792-4-4V8c0-2.208,1.792-4,4-4Z" transform="rotate(180 26 16)" fill="#be2a2c"></path><path d="M27,4H5c-2.209,0-4,1.791-4,4V24c0,2.209,1.791,4,4,4H27c2.209,0,4-1.791,4-4V8c0-2.209-1.791-4-4-4Zm3,20c0,1.654-1.346,3-3,3H5c-1.654,0-3-1.346-3-3V8c0-1.654,1.346-3,3-3H27c1.654,0,3,1.346,3,3V24Z" opacity=".15"></path><path d="M27,5H5c-1.657,0-3,1.343-3,3v1c0-1.657,1.343-3,3-3H27c1.657,0,3,1.343,3,3v-1c0-1.657-1.343-3-3-3Z" fill="#fff" opacity=".2"></path></svg>'],
            ['german', '<svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 32 32"><path fill="#cc2b1d" d="M1 11H31V21H1z"></path><path d="M5,4H27c2.208,0,4,1.792,4,4v4H1v-4c0-2.208,1.792-4,4-4Z"></path><path d="M5,20H27c2.208,0,4,1.792,4,4v4H1v-4c0-2.208,1.792-4,4-4Z" transform="rotate(180 16 24)" fill="#f8d147"></path><path d="M27,4H5c-2.209,0-4,1.791-4,4V24c0,2.209,1.791,4,4,4H27c2.209,0,4-1.791,4-4V8c0-2.209-1.791-4-4-4Zm3,20c0,1.654-1.346,3-3,3H5c-1.654,0-3-1.346-3-3V8c0-1.654,1.346-3,3-3H27c1.654,0,3,1.346,3,3V24Z" opacity=".15"></path><path d="M27,5H5c-1.657,0-3,1.343-3,3v1c0-1.657,1.343-3,3-3H27c1.657,0,3,1.343,3,3v-1c0-1.657-1.343-3-3-3Z" fill="#fff" opacity=".2"></path></svg>'],
            ['gilaki', 'gilaki'],
            ['greek', '<svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 32 32"><rect x="1" y="4" width="30" height="24" rx="4" ry="4" fill="#fff"></rect><path d="M1.244,6.67H30.756c-.55-1.552-2.016-2.67-3.756-2.67H5c-1.74,0-3.206,1.118-3.756,2.67Z" fill="#295cab"></path><path fill="#295cab" d="M1 9.34H31V12.01H1z"></path><path fill="#295cab" d="M1 14.68H31V17.35H1z"></path><path fill="#295cab" d="M1 20.02H31V22.689999999999998H1z"></path><path d="M1.253,25.36c.558,1.536,2.018,2.64,3.747,2.64H27c1.729,0,3.188-1.104,3.747-2.64H1.253Z" fill="#295cab"></path><path d="M14.35,4H5c-2.209,0-4,1.791-4,4v9.35H14.35V4Z" fill="#295cab"></path><path fill="#fff" d="M1 9.34H14.35V12.01H1z"></path><path transform="rotate(90 7.675 10.675)" fill="#fff" d="M1 9.34H14.35V12.01H1z"></path><path d="M27,4H5c-2.209,0-4,1.791-4,4V24c0,2.209,1.791,4,4,4H27c2.209,0,4-1.791,4-4V8c0-2.209-1.791-4-4-4Zm3,20c0,1.654-1.346,3-3,3H5c-1.654,0-3-1.346-3-3V8c0-1.654,1.346-3,3-3H27c1.654,0,3,1.346,3,3V24Z" opacity=".15"></path><path d="M27,5H5c-1.657,0-3,1.343-3,3v1c0-1.657,1.343-3,3-3H27c1.657,0,3,1.343,3,3v-1c0-1.657-1.343-3-3-3Z" fill="#fff" opacity=".2"></path></svg>'],
            ['hebrew', 'hebrew'],
            ['hindi', '<svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 32 32"><path fill="#fff" d="M1 11H31V21H1z"></path><path d="M5,4H27c2.208,0,4,1.792,4,4v4H1v-4c0-2.208,1.792-4,4-4Z" fill="#e06535"></path><path d="M5,20H27c2.208,0,4,1.792,4,4v4H1v-4c0-2.208,1.792-4,4-4Z" transform="rotate(180 16 24)" fill="#2c6837"></path><path d="M27,4H5c-2.209,0-4,1.791-4,4V24c0,2.209,1.791,4,4,4H27c2.209,0,4-1.791,4-4V8c0-2.209-1.791-4-4-4Zm3,20c0,1.654-1.346,3-3,3H5c-1.654,0-3-1.346-3-3V8c0-1.654,1.346-3,3-3H27c1.654,0,3,1.346,3,3V24Z" opacity=".15"></path><path d="M16,12.292c-2.048,0-3.708,1.66-3.708,3.708s1.66,3.708,3.708,3.708,3.708-1.66,3.708-3.708-1.66-3.708-3.708-3.708Zm3.041,4.109c-.01,.076,.042,.145,.117,.157-.033,.186-.08,.367-.143,.54-.071-.028-.152,.006-.181,.077-.029,.071,.004,.151,.073,.182-.04,.085-.083,.167-.13,.248l-1.611-1.069-.592-.249c.013-.026,.024-.053,.034-.081l.595,.242,1.895,.383-1.833-.616-.636-.087c.006-.028,.009-.057,.011-.087l.638,.08,1.93-.12-1.93-.12-.638,.08c-.002-.03-.005-.059-.011-.087l.636-.087,1.833-.616-1.895,.383-.595,.242c-.009-.028-.021-.055-.034-.081l.592-.249,1.611-1.069c.047,.081,.09,.163,.13,.248-.07,.031-.103,.111-.073,.182,.029,.071,.11,.105,.181,.077,.063,.173,.111,.354,.143,.54-.075,.012-.127,.081-.117,.157,.01,.076,.078,.129,.154,.121,.008,.092,.013,.185,.013,.279s-.005,.187-.013,.279c-.075-.008-.144,.045-.154,.121Zm-.584-2.462c-.059,.048-.07,.134-.023,.194,.046,.06,.132,.072,.194,.028,.053,.076,.104,.155,.15,.236l-1.731,.861-.512,.388c-.016-.024-.034-.047-.054-.069l.508-.394,1.28-1.45-1.45,1.28-.394,.508c-.022-.019-.045-.038-.069-.054l.388-.512,.861-1.731c.081,.047,.16,.097,.236,.15-.045,.061-.033,.147,.028,.194,.061,.046,.147,.036,.194-.023,.071,.06,.141,.123,.207,.189,.066,.066,.129,.135,.189,.207Zm-2.177-1.133c-.008,.075,.045,.144,.121,.154,.076,.01,.145-.042,.157-.117,.186,.033,.367,.08,.54,.143-.028,.071,.006,.152,.077,.181,.071,.029,.151-.004,.182-.073,.085,.04,.167,.083,.248,.13l-1.069,1.611-.249,.592c-.026-.013-.053-.024-.081-.034l.242-.595,.383-1.895-.616,1.833-.087,.636c-.028-.006-.057-.009-.087-.011l.08-.638-.12-1.93-.12,1.93,.08,.638c-.03,.002-.059,.005-.087,.011l-.087-.636-.616-1.833,.383,1.895,.242,.595c-.028,.009-.055,.021-.081,.034l-.249-.592-1.069-1.611c.081-.047,.163-.09,.248-.13,.031,.07,.111,.103,.182,.073,.071-.029,.105-.11,.077-.181,.173-.063,.354-.111,.54-.143,.012,.075,.081,.127,.157,.117,.076-.01,.129-.078,.121-.154,.092-.008,.185-.013,.279-.013s.187,.005,.279,.013Zm-3.113,4.368c-.029-.071-.11-.105-.181-.077-.063-.173-.111-.354-.143-.54,.075-.012,.127-.081,.117-.157-.01-.076-.078-.129-.154-.121-.008-.092-.013-.185-.013-.279s.005-.187,.013-.279c.075,.008,.144-.045,.154-.121,.01-.076-.042-.145-.117-.157,.033-.186,.08-.367,.143-.54,.071,.028,.152-.006,.181-.077,.029-.071-.004-.151-.073-.182,.04-.085,.083-.167,.13-.248l1.611,1.069,.592,.249c-.013,.026-.024,.053-.034,.081l-.595-.242-1.895-.383,1.833,.616,.636,.087c-.006,.028-.009,.057-.011,.087l-.638-.08-1.93,.12,1.93,.12,.638-.08c.002,.03,.005,.059,.011,.087l-.636,.087-1.833,.616,1.895-.383,.595-.242c.009,.028,.021,.055,.034,.081l-.592,.249-1.611,1.069c-.047-.081-.09-.163-.13-.248,.07-.031,.103-.111,.073-.182Zm.772-3.63c.048,.059,.134,.07,.194,.023,.06-.046,.072-.132,.028-.194,.076-.053,.155-.104,.236-.15l.861,1.731,.388,.512c-.024,.016-.047,.034-.069,.054l-.394-.508-1.45-1.28,1.28,1.45,.508,.394c-.019,.022-.038,.045-.054,.069l-.512-.388-1.731-.861c.047-.081,.097-.16,.15-.236,.061,.045,.147,.033,.194-.028,.046-.061,.036-.147-.023-.194,.06-.071,.123-.141,.189-.207s.135-.129,.207-.189Zm-.395,4.518c.059-.048,.07-.134,.023-.194-.046-.06-.132-.072-.194-.028-.053-.076-.104-.155-.15-.236l1.731-.861,.512-.388c.016,.024,.034,.047,.054,.069l-.508,.394-1.28,1.45,1.45-1.28,.394-.508c.022,.019,.045,.038,.069,.054l-.388,.512-.861,1.731c-.081-.047-.16-.097-.236-.15,.045-.061,.033-.147-.028-.194-.061-.046-.147-.036-.194,.023-.071-.06-.141-.123-.207-.189-.066-.066-.129-.135-.189-.207Zm2.177,1.133c.008-.075-.045-.144-.121-.154-.076-.01-.145,.042-.157,.117-.186-.033-.367-.08-.54-.143,.028-.071-.006-.152-.077-.181-.071-.029-.151,.004-.182,.073-.085-.04-.167-.083-.248-.13l1.069-1.611,.249-.592c.026,.013,.053,.024,.081,.034l-.242,.595-.383,1.895,.616-1.833,.087-.636c.028,.006,.057,.009,.087,.011l-.08,.638,.12,1.93,.12-1.93-.08-.638c.03-.002,.059-.005,.087-.011l.087,.636,.616,1.833-.383-1.895-.242-.595c.028-.009,.055-.021,.081-.034l.249,.592,1.069,1.611c-.081,.047-.163,.09-.248,.13-.031-.07-.111-.103-.182-.073-.071,.029-.105,.11-.077,.181-.173,.063-.354,.111-.54,.143-.012-.075-.081-.127-.157-.117-.076,.01-.129,.078-.121,.154-.092,.008-.185,.013-.279,.013s-.187-.005-.279-.013Zm2.341-.738c-.048-.059-.134-.07-.194-.023-.06,.046-.072,.132-.028,.194-.076,.053-.155,.104-.236,.15l-.861-1.731-.388-.512c.024-.016,.047-.034,.069-.054l.394,.508,1.45,1.28-1.28-1.45-.508-.394c.019-.022,.038-.045,.054-.069l.512,.388,1.731,.861c-.047,.081-.097,.16-.15,.236-.061-.045-.147-.033-.194,.028-.046,.061-.036,.147,.023,.194-.06,.071-.123,.141-.189,.207s-.135,.129-.207,.189Z" fill="#2c2c6b"></path><path d="M27,5H5c-1.657,0-3,1.343-3,3v1c0-1.657,1.343-3,3-3H27c1.657,0,3,1.343,3,3v-1c0-1.657-1.343-3-3-3Z" fill="#fff" opacity=".2"></path></svg>'],
            ['hungarian', '<svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 32 32"><path fill="#fff" d="M1 11H31V21H1z"></path><path d="M5,4H27c2.208,0,4,1.792,4,4v4H1v-4c0-2.208,1.792-4,4-4Z" fill="#be373c"></path><path d="M5,20H27c2.208,0,4,1.792,4,4v4H1v-4c0-2.208,1.792-4,4-4Z" transform="rotate(180 16 24)" fill="#4f6f52"></path><path d="M27,4H5c-2.209,0-4,1.791-4,4V24c0,2.209,1.791,4,4,4H27c2.209,0,4-1.791,4-4V8c0-2.209-1.791-4-4-4Zm3,20c0,1.654-1.346,3-3,3H5c-1.654,0-3-1.346-3-3V8c0-1.654,1.346-3,3-3H27c1.654,0,3,1.346,3,3V24Z" opacity=".15"></path><path d="M27,5H5c-1.657,0-3,1.343-3,3v1c0-1.657,1.343-3,3-3H27c1.657,0,3,1.343,3,3v-1c0-1.657-1.343-3-3-3Z" fill="#fff" opacity=".2"></path></svg>'],
            ['italian', '<svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 32 32"><path fill="#fff" d="M10 4H22V28H10z"></path><path d="M5,4h6V28H5c-2.208,0-4-1.792-4-4V8c0-2.208,1.792-4,4-4Z" fill="#41914d"></path><path d="M25,4h6V28h-6c-2.208,0-4-1.792-4-4V8c0-2.208,1.792-4,4-4Z" transform="rotate(180 26 16)" fill="#bf393b"></path><path d="M27,4H5c-2.209,0-4,1.791-4,4V24c0,2.209,1.791,4,4,4H27c2.209,0,4-1.791,4-4V8c0-2.209-1.791-4-4-4Zm3,20c0,1.654-1.346,3-3,3H5c-1.654,0-3-1.346-3-3V8c0-1.654,1.346-3,3-3H27c1.654,0,3,1.346,3,3V24Z" opacity=".15"></path><path d="M27,5H5c-1.657,0-3,1.343-3,3v1c0-1.657,1.343-3,3-3H27c1.657,0,3,1.343,3,3v-1c0-1.657-1.343-3-3-3Z" fill="#fff" opacity=".2"></path></svg>'],
            ['japanese', '<svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 32 32"><rect x="1" y="4" width="30" height="24" rx="4" ry="4" fill="#fff"></rect><path d="M27,4H5c-2.209,0-4,1.791-4,4V24c0,2.209,1.791,4,4,4H27c2.209,0,4-1.791,4-4V8c0-2.209-1.791-4-4-4Zm3,20c0,1.654-1.346,3-3,3H5c-1.654,0-3-1.346-3-3V8c0-1.654,1.346-3,3-3H27c1.654,0,3,1.346,3,3V24Z" opacity=".15"></path><circle cx="16" cy="16" r="6" fill="#ae232f"></circle><path d="M27,5H5c-1.657,0-3,1.343-3,3v1c0-1.657,1.343-3,3-3H27c1.657,0,3,1.343,3,3v-1c0-1.657-1.343-3-3-3Z" fill="#fff" opacity=".2"></path></svg>'],
            ['kannada', 'ಕನ್ನಡ'],
            ['korean', '<svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 32 32"><rect x="1" y="4" width="30" height="24" rx="4" ry="4" fill="#fff"></rect><path d="M27,4H5c-2.209,0-4,1.791-4,4V24c0,2.209,1.791,4,4,4H27c2.209,0,4-1.791,4-4V8c0-2.209-1.791-4-4-4Zm3,20c0,1.654-1.346,3-3,3H5c-1.654,0-3-1.346-3-3V8c0-1.654,1.346-3,3-3H27c1.654,0,3,1.346,3,3V24Z" opacity=".15"></path><path transform="rotate(-56.31 8.143 10.762)" d="M5.877 10.384H10.41V11.139000000000001H5.877z"></path><path transform="rotate(-56.31 9.086 11.39)" d="M6.819 11.013H11.352V11.768H6.819z"></path><path transform="rotate(-56.31 10.028 12.02)" d="M7.762 11.641H12.295V12.396H7.762z"></path><path transform="rotate(-56.31 24.538 20.216)" d="M23.499 19.839H25.576V20.593999999999998H23.499z"></path><path transform="rotate(-56.31 23.176 22.26)" d="M22.137 21.882H24.215V22.637H22.137z"></path><path transform="rotate(-56.31 23.595 19.588)" d="M22.556 19.21H24.633000000000003V19.965H22.556z"></path><path transform="rotate(-56.31 22.234 21.632)" d="M21.195 21.253H23.272V22.008H21.195z"></path><path transform="rotate(-56.31 22.653 18.96)" d="M21.614 18.582H23.691000000000003V19.337H21.614z"></path><path transform="rotate(-56.31 21.29 21.002)" d="M20.252 20.625H22.329V21.38H20.252z"></path><path d="M12.229,13.486c1.389-2.083,4.203-2.646,6.286-1.257s2.646,4.203,1.257,6.286l-7.543-5.029Z" fill="#be3b3e"></path><path d="M12.229,13.486c-1.389,2.083-.826,4.897,1.257,6.286s4.897,.826,6.286-1.257c.694-1.041,.413-2.449-.629-3.143s-2.449-.413-3.143,.629l-3.771-2.514Z" fill="#1c449c"></path><circle cx="14.114" cy="14.743" r="2.266" fill="#be3b3e"></circle><path transform="rotate(-33.69 8.143 21.238)" d="M7.765 18.972H8.52V23.505000000000003H7.765z"></path><path transform="rotate(-33.69 10.03 19.98)" d="M9.651 17.715H10.406V22.248H9.651z"></path><path transform="rotate(-33.69 22.915 11.39)" d="M22.537 9.124H23.291999999999998V13.657H22.537z"></path><path transform="rotate(-33.69 8.405 19.588)" d="M8.027 18.549H8.782V20.625999999999998H8.027z"></path><path transform="rotate(-33.691 9.767 21.632)" d="M9.389 20.592H10.144V22.668999999999997H9.389z"></path><path transform="rotate(-33.69 21.29 10.998)" d="M20.913 9.959H21.668V12.036H20.913z"></path><path transform="rotate(-33.69 22.652 13.04)" d="M22.275 12.002H23.029999999999998V14.079H22.275z"></path><path transform="rotate(-33.69 23.176 9.741)" d="M22.798 8.702H23.552999999999997V10.779H22.798z"></path><path transform="rotate(-33.691 24.539 11.783)" d="M24.16 10.745H24.915V12.822H24.16z"></path><path d="M27,5H5c-1.657,0-3,1.343-3,3v1c0-1.657,1.343-3,3-3H27c1.657,0,3,1.343,3,3v-1c0-1.657-1.343-3-3-3Z" fill="#fff" opacity=".2"></path></svg>'],
            ['kurdish', 'کوردی'],
            ['macedonian', '<svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 32 32"><rect x="1" y="4" width="30" height="24" rx="4" ry="4" fill="#c8342d"></rect><path d="M11.847,17.909L1,23.424v.576c0,.835,.257,1.609,.695,2.251l10.676-7.484c-.203-.266-.382-.55-.524-.857Z" fill="#f4e959"></path><path d="M11.417,16c0-.155,.031-.302,.046-.454L1,14.5v3l10.463-1.046c-.015-.151-.046-.298-.046-.454Z" fill="#f4e959"></path><path d="M16,11.417c.171,0,.333,.032,.499,.05l1.901-7.467h-4.8l1.901,7.467c.166-.018,.328-.05,.499-.05Z" fill="#f4e959"></path><circle cx="16" cy="16" r="3.75" fill="#f4e959"></circle><path d="M12.371,13.233L1.695,5.749c-.438,.641-.695,1.416-.695,2.251v.576l10.847,5.515c.142-.307,.32-.591,.524-.857Z" fill="#f4e959"></path><path d="M20.583,16c0,.155-.031,.302-.046,.454l10.463,1.046v-3l-10.463,1.046c.015,.151,.046,.298,.046,.454Z" fill="#f4e959"></path><path d="M30.305,5.749l-10.676,7.484c.203,.266,.382,.55,.524,.857l10.847-5.515v-.576c0-.835-.257-1.609-.695-2.251Z" fill="#f4e959"></path><path d="M16,20.583c-.171,0-.333-.032-.499-.05l-1.901,7.467h4.8l-1.901-7.467c-.166,.018-.328,.05-.499,.05Z" fill="#f4e959"></path><path d="M19.629,18.767l10.676,7.484c.438-.641,.695-1.416,.695-2.251v-.576l-10.847-5.515c-.142,.307-.32,.591-.524,.857Z" fill="#f4e959"></path><path d="M27,4H5c-2.209,0-4,1.791-4,4V24c0,2.209,1.791,4,4,4H27c2.209,0,4-1.791,4-4V8c0-2.209-1.791-4-4-4Zm3,20c0,1.654-1.346,3-3,3H5c-1.654,0-3-1.346-3-3V8c0-1.654,1.346-3,3-3H27c1.654,0,3,1.346,3,3V24Z" opacity=".15"></path><path d="M27,5H5c-1.657,0-3,1.343-3,3v1c0-1.657,1.343-3,3-3H27c1.657,0,3,1.343,3,3v-1c0-1.657-1.343-3-3-3Z" fill="#fff" opacity=".2"></path></svg>'],
            ['malayalam', 'malayāḷaṁ'],
            ['nigerian', '<svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 32 32"><path fill="#fff" d="M10 4H22V28H10z"></path><path d="M5,4h6V28H5c-2.208,0-4-1.792-4-4V8c0-2.208,1.792-4,4-4Z" fill="#3b8655"></path><path d="M25,4h6V28h-6c-2.208,0-4-1.792-4-4V8c0-2.208,1.792-4,4-4Z" transform="rotate(180 26 16)" fill="#3b8655"></path><path d="M27,4H5c-2.209,0-4,1.791-4,4V24c0,2.209,1.791,4,4,4H27c2.209,0,4-1.791,4-4V8c0-2.209-1.791-4-4-4Zm3,20c0,1.654-1.346,3-3,3H5c-1.654,0-3-1.346-3-3V8c0-1.654,1.346-3,3-3H27c1.654,0,3,1.346,3,3V24Z" opacity=".15"></path><path d="M27,5H5c-1.657,0-3,1.343-3,3v1c0-1.657,1.343-3,3-3H27c1.657,0,3,1.343,3,3v-1c0-1.657-1.343-3-3-3Z" fill="#fff" opacity=".2"></path></svg>'],
            ['nko', 'ߒߞߏ'],
            ['norwegian', '<svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 32 32"><rect x="1" y="4" width="30" height="24" rx="4" ry="4" fill="#ac2431"></rect><path fill="#fff" d="M31 12L17 12 17 4 9 4 9 12 1 12 1 20 9 20 9 28 17 28 17 20 31 20 31 12z"></path><path fill="#061a57" d="M31 14L15 14 15 4 11 4 11 14 1 14 1 18 11 18 11 28 15 28 15 18 31 18 31 14z"></path><path d="M27,4H5c-2.209,0-4,1.791-4,4V24c0,2.209,1.791,4,4,4H27c2.209,0,4-1.791,4-4V8c0-2.209-1.791-4-4-4Zm3,20c0,1.654-1.346,3-3,3H5c-1.654,0-3-1.346-3-3V8c0-1.654,1.346-3,3-3H27c1.654,0,3,1.346,3,3V24Z" opacity=".15"></path><path d="M27,5H5c-1.657,0-3,1.343-3,3v1c0-1.657,1.343-3,3-3H27c1.657,0,3,1.343,3,3v-1c0-1.657-1.343-3-3-3Z" fill="#fff" opacity=".2"></path></svg>'],
            ['odia', 'ଓଡ଼ିଆ'],
            ['polish', '<svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 32 32"><path d="M1,24c0,2.209,1.791,4,4,4H27c2.209,0,4-1.791,4-4V15H1v9Z" fill="#cb2e40"></path><path d="M27,4H5c-2.209,0-4,1.791-4,4v8H31V8c0-2.209-1.791-4-4-4Z" fill="#fff"></path><path d="M5,28H27c2.209,0,4-1.791,4-4V8c0-2.209-1.791-4-4-4H5c-2.209,0-4,1.791-4,4V24c0,2.209,1.791,4,4,4ZM2,8c0-1.654,1.346-3,3-3H27c1.654,0,3,1.346,3,3V24c0,1.654-1.346,3-3,3H5c-1.654,0-3-1.346-3-3V8Z" opacity=".15"></path><path d="M27,5H5c-1.657,0-3,1.343-3,3v1c0-1.657,1.343-3,3-3H27c1.657,0,3,1.343,3,3v-1c0-1.657-1.343-3-3-3Z" fill="#fff" opacity=".2"></path></svg>'],
            ['punjabi', 'ਪੰਜਾਬੀ'],
            ['russian', '⚠️'],
            ['russianOld', '⚠️'],
            ['sindhi', 'Sindhī'],
            ['spanish', '<svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 32 32"><path fill="#f1c142" d="M1 10H31V22H1z"></path><path d="M5,4H27c2.208,0,4,1.792,4,4v3H1v-3c0-2.208,1.792-4,4-4Z" fill="#a0251e"></path><path d="M5,21H27c2.208,0,4,1.792,4,4v3H1v-3c0-2.208,1.792-4,4-4Z" transform="rotate(180 16 24.5)" fill="#a0251e"></path><path d="M27,4H5c-2.209,0-4,1.791-4,4V24c0,2.209,1.791,4,4,4H27c2.209,0,4-1.791,4-4V8c0-2.209-1.791-4-4-4Zm3,20c0,1.654-1.346,3-3,3H5c-1.654,0-3-1.346-3-3V8c0-1.654,1.346-3,3-3H27c1.654,0,3,1.346,3,3V24Z" opacity=".15"></path><path d="M27,5H5c-1.657,0-3,1.343-3,3v1c0-1.657,1.343-3,3-3H27c1.657,0,3,1.343,3,3v-1c0-1.657-1.343-3-3-3Z" fill="#fff" opacity=".2"></path><path d="M12.614,13.091c.066-.031,.055-.14-.016-.157,.057-.047,.02-.15-.055-.148,.04-.057-.012-.144-.082-.13,.021-.062-.042-.127-.104-.105,.01-.068-.071-.119-.127-.081,.004-.068-.081-.112-.134-.069-.01-.071-.11-.095-.15-.035-.014-.068-.111-.087-.149-.028-.027-.055-.114-.057-.144-.004-.03-.047-.107-.045-.136,.002-.018-.028-.057-.044-.09-.034,.009-.065-.066-.115-.122-.082,.002-.07-.087-.111-.138-.064-.013-.064-.103-.087-.144-.036-.02-.063-.114-.075-.148-.017-.036-.056-.129-.042-.147,.022-.041-.055-.135-.031-.146,.036-.011-.008-.023-.014-.037-.016,.006-.008,.01-.016,.015-.025h.002c.058-.107,.004-.256-.106-.298v-.098h.099v-.154h-.099v-.101h-.151v.101h-.099v.154h.099v.096c-.113,.04-.169,.191-.11,.299h.002c.004,.008,.009,.017,.014,.024-.015,.002-.029,.008-.04,.017-.011-.067-.106-.091-.146-.036-.018-.064-.111-.078-.147-.022-.034-.057-.128-.046-.148,.017-.041-.052-.131-.028-.144,.036-.051-.047-.139-.006-.138,.064-.056-.033-.131,.017-.122,.082-.034-.01-.072,.006-.091,.034-.029-.047-.106-.049-.136-.002-.03-.054-.117-.051-.143,.004-.037-.059-.135-.04-.149,.028-.039-.06-.14-.037-.15,.035-.053-.043-.138,0-.134,.069-.056-.038-.137,.013-.127,.081-.062-.021-.125,.044-.104,.105-.05-.009-.096,.033-.096,.084h0c0,.017,.005,.033,.014,.047-.075-.002-.111,.101-.055,.148-.071,.017-.082,.125-.016,.157-.061,.035-.047,.138,.022,.154-.013,.015-.021,.034-.021,.055h0c0,.042,.03,.077,.069,.084-.023,.048,.009,.11,.06,.118-.013,.03-.012,.073-.012,.106,.09-.019,.2,.006,.239,.11-.015,.068,.065,.156,.138,.146,.06,.085,.133,.165,.251,.197-.021,.093,.064,.093,.123,.118-.013,.016-.043,.063-.055,.081,.024,.013,.087,.041,.113,.051,.005,.019,.004,.028,.004,.031,.091,.501,2.534,.502,2.616-.001v-.002s.004,.003,.004,.004c0-.003-.001-.011,.004-.031l.118-.042-.062-.09c.056-.028,.145-.025,.123-.119,.119-.032,.193-.112,.253-.198,.073,.01,.153-.078,.138-.146,.039-.104,.15-.129,.239-.11,0-.035,.002-.078-.013-.109,.044-.014,.07-.071,.049-.115,.062-.009,.091-.093,.048-.139,.069-.016,.083-.12,.022-.154Zm-.296-.114c0,.049-.012,.098-.034,.141-.198-.137-.477-.238-.694-.214-.002-.009-.006-.017-.011-.024,0,0,0-.001,0-.002,.064-.021,.074-.12,.015-.153,0,0,0,0,0,0,.048-.032,.045-.113-.005-.141,.328-.039,.728,.09,.728,.393Zm-.956-.275c0,.063-.02,.124-.054,.175-.274-.059-.412-.169-.717-.185-.007-.082-.005-.171-.011-.254,.246-.19,.81-.062,.783,.264Zm-1.191-.164c-.002,.05-.003,.102-.007,.151-.302,.013-.449,.122-.719,.185-.26-.406,.415-.676,.73-.436-.002,.033-.005,.067-.004,.101Zm-1.046,.117c0,.028,.014,.053,.034,.069,0,0,0,0,0,0-.058,.033-.049,.132,.015,.152,0,0,0,.001,0,.002-.005,.007-.008,.015-.011,.024-.219-.024-.495,.067-.698,.206-.155-.377,.323-.576,.698-.525-.023,.015-.039,.041-.039,.072Zm3.065-.115s0,0,0,0c0,0,0,0,0,0,0,0,0,0,0,0Zm-3.113,1.798v.002s-.002,0-.003,.002c0-.001,.002-.003,.003-.003Z" fill="#9b8028"></path><path d="M14.133,16.856c.275-.65,.201-.508-.319-.787v-.873c.149-.099-.094-.121,.05-.235h.072v-.339h-.99v.339h.075c.136,.102-.091,.146,.05,.235v.76c-.524-.007-.771,.066-.679,.576h.039s0,0,0,0l.016,.036c.14-.063,.372-.107,.624-.119v.224c-.384,.029-.42,.608,0,.8v1.291c-.053,.017-.069,.089-.024,.123,.007,.065-.058,.092-.113,.083,0,.026,0,.237,0,.269-.044,.024-.113,.03-.17,.028v.108s0,0,0,0v.107s0,0,0,0v.107s0,0,0,0v.108s0,0,0,0v.186c.459-.068,.895-.068,1.353,0v-.616c-.057,.002-.124-.004-.17-.028,0-.033,0-.241,0-.268-.054,.008-.118-.017-.113-.081,.048-.033,.034-.108-.021-.126v-.932c.038,.017,.073,.035,.105,.053-.105,.119-.092,.326,.031,.429l.057-.053c.222-.329,.396-.743-.193-.896v-.35c.177-.019,.289-.074,.319-.158Z" fill="#9b8028"></path><path d="M8.36,16.058c-.153-.062-.39-.098-.653-.102v-.76c.094-.041,.034-.115-.013-.159,.02-.038,.092-.057,.056-.115h.043v-.261h-.912v.261h.039c-.037,.059,.039,.078,.057,.115-.047,.042-.108,.118-.014,.159v.873c-.644,.133-.611,.748,0,.945v.35c-.59,.154-.415,.567-.193,.896l.057,.053c.123-.103,.136-.31,.031-.429,.032-.018,.067-.036,.105-.053v.932c-.055,.018-.069,.093-.021,.126,.005,.064-.059,.089-.113,.081,0,.026,0,.236,0,.268-.045,.024-.113,.031-.17,.028v.401h0v.215c.459-.068,.895-.068,1.352,0v-.186s0,0,0,0v-.108s0,0,0,0v-.107s0,0,0,0v-.107s0,0,0,0v-.108c-.056,.002-.124-.004-.169-.028,0-.033,0-.241,0-.269-.055,.008-.119-.018-.113-.083,.045-.034,.03-.107-.024-.124v-1.29c.421-.192,.383-.772,0-.8v-.224c.575,.035,.796,.314,.653-.392Z" fill="#9b8028"></path><path d="M12.531,14.533h-4.28l.003,2.572v1.485c0,.432,.226,.822,.591,1.019,.473,.252,1.024,.391,1.552,.391s1.064-.135,1.544-.391c.364-.197,.591-.587,.591-1.019v-4.057Z" fill="#a0251e"></path></svg>'],
            ['swedish', '<svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 32 32"><rect x="1" y="4" width="30" height="24" rx="4" ry="4" fill="#2e69a4"></rect><path fill="#f7cf46" d="M31 14L15 14 15 4 11 4 11 14 1 14 1 18 11 18 11 28 15 28 15 18 31 18 31 14z"></path><path d="M27,4H5c-2.209,0-4,1.791-4,4V24c0,2.209,1.791,4,4,4H27c2.209,0,4-1.791,4-4V8c0-2.209-1.791-4-4-4Zm3,20c0,1.654-1.346,3-3,3H5c-1.654,0-3-1.346-3-3V8c0-1.654,1.346-3,3-3H27c1.654,0,3,1.346,3,3V24Z" opacity=".15"></path><path d="M27,5H5c-1.657,0-3,1.343-3,3v1c0-1.657,1.343-3,3-3H27c1.657,0,3,1.343,3,3v-1c0-1.657-1.343-3-3-3Z" fill="#fff" opacity=".2"></path></svg>'],
            ['telugu', 'telugu'],
            ['thai', 'thai'],
            ['turkish', '<svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 32 32"><rect x="1" y="4" width="30" height="24" rx="4" ry="4" fill="#d12d24"></rect><path d="M27,4H5c-2.209,0-4,1.791-4,4V24c0,2.209,1.791,4,4,4H27c2.209,0,4-1.791,4-4V8c0-2.209-1.791-4-4-4Zm3,20c0,1.654-1.346,3-3,3H5c-1.654,0-3-1.346-3-3V8c0-1.654,1.346-3,3-3H27c1.654,0,3,1.346,3,3V24Z" opacity=".15"></path><path d="M27,5H5c-1.657,0-3,1.343-3,3v1c0-1.657,1.343-3,3-3H27c1.657,0,3,1.343,3,3v-1c0-1.657-1.343-3-3-3Z" fill="#fff" opacity=".2"></path><path fill="#fff" d="M19.807 16L21 14.358 19.069 14.985 17.876 13.342 17.876 15.373 15.945 16 17.876 16.627 17.876 18.658 19.069 17.015 21 17.642 19.807 16z"></path><path d="M15.953,19.325c-1.837,1.65-4.663,1.5-6.314-.337s-1.5-4.663,.337-6.314c1.837-1.65,4.663-1.5,6.314,.337-.442-.699-1.035-1.292-1.734-1.734-2.608-1.65-6.06-.874-7.711,1.734-1.65,2.608-.874,6.06,1.734,7.711,2.608,1.65,6.06,.874,7.711-1.734-.106,.118-.219,.231-.337,.337Z" fill="#fff"></path></svg>'],
            ['ukrainian', '<svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 32 32"><path d="M31,8c0-2.209-1.791-4-4-4H5c-2.209,0-4,1.791-4,4v9H31V8Z" fill="#2455b2"></path><path d="M5,28H27c2.209,0,4-1.791,4-4v-8H1v8c0,2.209,1.791,4,4,4Z" fill="#f9da49"></path><path d="M5,28H27c2.209,0,4-1.791,4-4V8c0-2.209-1.791-4-4-4H5c-2.209,0-4,1.791-4,4V24c0,2.209,1.791,4,4,4ZM2,8c0-1.654,1.346-3,3-3H27c1.654,0,3,1.346,3,3V24c0,1.654-1.346,3-3,3H5c-1.654,0-3-1.346-3-3V8Z" opacity=".15"></path><path d="M27,5H5c-1.657,0-3,1.343-3,3v1c0-1.657,1.343-3,3-3H27c1.657,0,3,1.343,3,3v-1c0-1.657-1.343-3-3-3Z" fill="#fff" opacity=".2"></path></svg>'],
            ['urdu', 'urdu'],
            ['urduStandard', 'urduStandard'],
            ['uyghur', 'uyghur'],
        ]);
    }
    getFlag(name) {
        return this.countries.get(name.toLowerCase());
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.12", ngImport: i0, type: CountryService, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }
    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "17.3.12", ngImport: i0, type: CountryService, providedIn: 'root' }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.12", ngImport: i0, type: CountryService, decorators: [{
            type: Injectable,
            args: [{
                    providedIn: 'root',
                }]
        }], ctorParameters: () => [] });

class NgxSimpleKeyboardKioskComponent {
    constructor(renderer, flags, document) {
        this.renderer = renderer;
        this.flags = flags;
        this.document = document;
        this.languageChange = new EventEmitter();
        this.inputElement = null;
        this.shiftPressed = false;
        this.isMouseDown = false;
        this.languageLayout = englishLayout;
        this.languageLayouts = englishLayout;
        this.keyboardHideTask = null;
        this.numericLayout = {
            default: ['1 2 3', '4 5 6', '7 8 9', '{tab} 0 {bksp} {downkeyboard}'],
        };
        this.querySelector = 'input:not([readonly]), textarea:not([readonly])';
    }
    ngOnInit() {
        this.originalDefaultLanguage = this.defaultLanguage; // Store the original default language
        this.setupKeyboard();
        this.setupEventListeners();
        this.keyboardContainer.nativeElement.style.display = 'none'; // Initially hide the keyboard
    }
    setupKeyboard() {
        // Initialize available layouts
        let layoutsInstance = new SimpleKeyboardLayouts();
        this.languageLayouts = layoutsInstance.layouts;
        // Automatically set language layout based on the provided languages
        this.languageLayout = this.languageLayouts[this.defaultLanguage]
            || this.languageLayouts['english']; // Fallback to English if not found
        if (this.secondLanguage === 'english') {
            this.flagUrl = this.flags.getFlag('english');
        }
        else {
            this.flagUrl = this.flags.getFlag(this.secondLanguage);
        }
        const keyRowsDefault = this.languageLayout.layout.default;
        //keyRowsDefault[keyRowsDefault.length - 1] += ' {downkeyboard} {lang}';
        keyRowsDefault[keyRowsDefault.length - 1] += ' {lang}';
        const keyRowsShift = this.languageLayout.layout.shift;
        // keyRowsShift[keyRowsShift.length - 1] += ' {downkeyboard}';
        keyRowsShift[keyRowsShift.length - 1] += ' {lang}';
        const removeKeys = (row, keysToRemove) => {
            return row.split(' ').filter(key => !keysToRemove.includes(key)).join(' ');
        };
        if (this.removeks && this.removeks.length > 0) {
            if (keyRowsDefault.length > 0) {
                keyRowsDefault.forEach((row, index) => {
                    keyRowsDefault[index] = removeKeys(row, this.removeks);
                });
            }
            if (keyRowsShift.length > 0) {
                keyRowsShift.forEach((row, index) => {
                    keyRowsShift[index] = removeKeys(row, this.removeks);
                });
            }
        }
        this.keyboard = new Keyboard({
            onChange: (input) => this.onChange(input),
            onKeyPress: (button) => this.onKeyPress(button),
            onKeyReleased: (button) => this.onKeyRelease(button),
            ...this.languageLayout,
            display: {
                '{tab}': '↹',
                '{bksp}': '⌫',
                '{downkeyboard}': '\u25BC',
                '{space}': ' ',
                '{lang}': `${this.flagUrl}`,
                '{lock}': '⇪',
                '{shift}': '⇧',
                '{enter}': '↵',
            },
        });
        this.hideKeyboard();
    }
    setupEventListeners() {
        this.renderer.listen('window', 'focusin', (event) => {
            const target = event.target;
            if (target && target.matches(this.querySelector)) {
                this.onFocus(target);
            }
        });
        const events = ['mousedown', 'mouseup', 'touchstart', 'touchend'];
        events.forEach(eventName => {
            this.renderer.listen('body', eventName, (event) => {
                if (eventName === 'mouseup') {
                    this.onMouseUp(event);
                }
                if (this.isChildElement(event.target, this.keyboardContainer.nativeElement)) {
                    event.preventDefault(); // Prevents input blur when interacting with the keyboard
                }
            });
        });
    }
    setupEventListenersOLD() {
        this.renderer.listen('window', 'focusin', (event) => {
            const target = event.target;
            if (target && target.matches(this.querySelector)) {
                this.onFocus(target);
            }
        });
        const events = ['mousedown', 'mouseup', 'touchstart', 'touchend'];
        events.forEach(eventName => {
            this.renderer.listen('body', eventName, (event) => {
                if (this.isChildElement(event.target, this.keyboardContainer.nativeElement)) {
                    event.preventDefault(); // Prevents input blur when interacting with the keyboard
                }
            });
        });
    }
    updateKeyboardLayout() {
        const layout = this.defaultLanguage === 'english' ? englishLayout : georgianlayout;
        this.switchLanguage('english');
    }
    switchLanguage(language) {
        const layoutsInstance = new SimpleKeyboardLayouts();
        this.languageLayouts = layoutsInstance.layouts;
        this.languageLayout = this.languageLayouts[language] || this.languageLayouts['english'];
        if (language === this.originalDefaultLanguage) {
            this.flagUrl = this.flags.getFlag(this.secondLanguage);
        }
        else {
            this.flagUrl = this.flags.getFlag(this.originalDefaultLanguage);
        }
        const keyRowsDefault = this.languageLayout.layout.default;
        const keyRowsShift = this.languageLayout.layout.shift;
        const removeKeys = (row, keysToRemove) => {
            return row.split(' ').filter(key => !keysToRemove.includes(key)).join(' ');
        };
        if (this.removeks && this.removeks.length > 0) {
            if (keyRowsDefault.length > 0) {
                keyRowsDefault.forEach((row, index) => {
                    keyRowsDefault[index] = removeKeys(row, this.removeks);
                });
            }
            if (keyRowsShift.length > 0) {
                keyRowsShift.forEach((row, index) => {
                    keyRowsShift[index] = removeKeys(row, this.removeks);
                });
            }
        }
        const addSpecialButtons = (row) => {
            //if (!row.includes('{downkeyboard}')) row += ' {downkeyboard}';
            if (!row.includes('{lang}'))
                row += ' {lang}';
            return row;
        };
        if (keyRowsDefault.length > 0) {
            keyRowsDefault[keyRowsDefault.length - 1] = addSpecialButtons(keyRowsDefault[keyRowsDefault.length - 1]);
        }
        if (keyRowsShift.length > 0) {
            keyRowsShift[keyRowsShift.length - 1] = addSpecialButtons(keyRowsShift[keyRowsShift.length - 1]);
        }
        // Set the options on the keyboard
        if (this.keyboard) {
            this.keyboard.setOptions({
                ...this.languageLayout,
                layoutName: 'default',
                display: {
                    '{tab}': '↹',
                    '{bksp}': '⌫',
                    '{downkeyboard}': '\u25BC',
                    '{space}': ' ',
                    '{lang}': `${this.flagUrl}`,
                    '{lock}': '⇪',
                    '{shift}': '⇧',
                    '{enter}': '↵',
                }
            });
        }
        // Emit the language change
        this.languageChange.emit(language);
    }
    switchLanguageold(language) {
        this.languageLayout = this.defaultLanguage === 'english' ? englishLayout : georgianlayout;
        const keyRowsDefault = this.languageLayout.layout.default;
        keyRowsDefault[keyRowsDefault.length - 1] += ' {downkeyboard}';
        keyRowsDefault[keyRowsDefault.length - 1] += ' {lang}';
        const keyRowsShift = this.languageLayout.layout.shift;
        keyRowsShift[keyRowsShift.length - 1] += ' {downkeyboard}';
        if (this.keyboard) {
            this.keyboard.setOptions({
                ...this.languageLayout,
                display: {
                    '{tab}': '↹',
                    '{bksp}': '⌫',
                    '{downkeyboard}': '\u25BC',
                    '{space}': ' ',
                    '{lang}': "LANG",
                    '{lock}': '⇪',
                    '{shift}': '⇧',
                    '{enter}': '↵',
                },
                layoutName: 'default',
            });
            this.toggleShiftLayout();
            this.toggleShiftLayout();
        }
    }
    //private setLanguageLayout(language: 'english' | 'georgian') {
    //  this.languageLayout = language === 'english' ? englishLayout : georgianlayout;
    //
    //  this.languageChange.emit(language);
    //}
    setLanguageLayout(language) {
        // Set the language layout based on the selected language
        this.languageLayout = language === 'english' ? englishLayout : georgianlayout;
        // Safely access the default and shift layouts
        const keyRowsDefault = this.languageLayout?.default || [];
        const keyRowsShift = this.languageLayout?.shift || [];
        // Function to add {downkeyboard} and {lang} if not present
        const addSpecialButtons = (row) => {
            if (!row.includes('{downkeyboard}')) {
                row += ' {downkeyboard}';
            }
            if (!row.includes('{lang}')) {
                row += ' {lang}';
            }
            return row;
        };
        // Modify the last row of the default layout
        if (keyRowsDefault.length > 0) {
            keyRowsDefault[keyRowsDefault.length - 1] = addSpecialButtons(keyRowsDefault[keyRowsDefault.length - 1]);
        }
        // Modify the last row of the shift layout
        if (keyRowsShift.length > 0) {
            keyRowsShift[keyRowsShift.length - 1] = addSpecialButtons(keyRowsShift[keyRowsShift.length - 1]);
        }
        // Emit the language change event
        this.languageChange.emit(language);
    }
    isChildElement(child, target) {
        if (target === child) {
            return true;
        }
        if (child.parentElement) {
            return this.isChildElement(child.parentElement, target);
        }
        return false;
    }
    onChange(input) {
        // Handle input change if needed
    }
    onKeyPress(button) {
        if (!this.inputElement || !button) {
            return;
        }
        const pos = this.inputElement.selectionStart;
        const posEnd = this.inputElement.selectionEnd;
        if (this.inputElement.type.toLowerCase() === 'number' && button !== '{tab}' && button !== '{downkeyboard}') {
            this.onKeyPressNumeric(button);
            return;
        }
        switch (button) {
            case '{shift}':
                this.handleShiftPress();
                break;
            case '{lock}':
                this.handleCapsLockPressed();
                break;
            case '{enter}':
                this.handleEnterPress(pos, posEnd);
                break;
            case '{bksp}':
                this.handleBackspacePress(pos, posEnd);
                break;
            case '{tab}':
                this.handleTabPress();
                break;
            case '{downkeyboard}':
                break;
            case '{space}':
                this.handleSpacePress(pos, posEnd);
                break;
            case '{lang}':
                this.handleLangswitch();
                break;
            default:
                this.handleDefaultKeyPress(button, pos, posEnd);
                break;
        }
        if (button !== '{shift}') {
            this.disableShiftPress();
        }
    }
    onKeyRelease(button) {
        if (button === '{downkeyboard}') {
            this.onFocusOut();
        }
    }
    onMouseUp(event) {
        this.isMouseDown = false;
        if (!this.inputElement || !this.inputElement.contains(event.target) || !this.keyboardContainer) {
            // this.hideKeyboard();
            // this.hideKeyboardToggler();
        }
    }
    onMouseUpNew(event) {
        this.isMouseDown = false;
        // Access native elements from ElementRef
        const inputElementNative = this.inputElement;
        const keyboardContainerNative = this.keyboardContainer ? this.keyboardContainer.nativeElement : null;
        // Check if the click was outside both inputElement and keyboardContainer
        if (!inputElementNative || !inputElementNative.contains(event.target)) {
            if (!keyboardContainerNative || !keyboardContainerNative.contains(event.target)) {
                this.hideKeyboard();
                this.hideKeyboardToggler();
            }
        }
    }
    onKeyPressNumeric(button) {
        if (![0, 1, 2, 3, 4, 5, 6, 7, 8, 9, '{bksp}'].some(x => String(x) === button)) {
            return;
        }
        if (button === '{bksp}') {
            const strValue = String(this.inputElement.value);
            if (strValue.length > 0) {
                this.inputElement.value = strValue.substring(0, strValue.length - 1);
            }
        }
        else {
            this.inputElement.value += button;
        }
        this.performNativeKeyPress(this.inputElement, button.charCodeAt(0));
    }
    handleEnterPress(pos, posEnd) {
        if (this.inputElement.tagName.toLowerCase() === 'textarea') {
            const button = '\n';
            if (pos !== null && posEnd !== null) {
                this.inputElement.value =
                    this.inputElement.value.substr(0, pos) +
                        button +
                        this.inputElement.value.substr(posEnd);
                this.inputElement.selectionStart = pos + 1;
                this.inputElement.selectionEnd = pos + 1;
            }
            else {
                this.inputElement.value += button;
            }
        }
        this.performNativeKeyPress(this.inputElement, 13);
    }
    handleLangswitch() {
        this.defaultLanguage = this.defaultLanguage === this.secondLanguage
            ? this.originalDefaultLanguage
            : this.secondLanguage;
        this.switchLanguage(this.defaultLanguage);
    }
    handleLangswitchDEF() {
        this.defaultLanguage = this.defaultLanguage === 'english' ? 'georgian' : 'english';
        this.switchLanguage(this.defaultLanguage);
    }
    handleBackspacePress(pos, posEnd) {
        if (!this.inputElement || pos === null || posEnd === null)
            return;
        const value = this.inputElement.value;
        if (pos === posEnd) {
            // If there's no selection, delete one character before the cursor
            if (pos > 0) {
                const before = value.substring(0, pos - 1);
                const after = value.substring(pos);
                this.inputElement.value = before + after;
                // Move the cursor one position back
                const newPos = pos - 1;
                this.inputElement.setSelectionRange(newPos, newPos);
            }
        }
        else {
            // If there's a selection, delete the selected range of text
            const before = value.substring(0, pos);
            const after = value.substring(posEnd);
            this.inputElement.value = before + after;
            // Set the cursor to the start of the deletion
            this.inputElement.setSelectionRange(pos, pos);
        }
        // Refocus the input element to ensure it stays focused
        this.inputElement.focus();
    }
    handleTabPress() {
        const inputList = Array.from(this.document.querySelectorAll(this.querySelector));
        const index = inputList.indexOf(this.inputElement);
        inputList[(index + 1) % inputList.length].focus();
    }
    handleSpacePress(pos, posEnd) {
        if (!this.inputElement || pos === null || posEnd === null)
            return;
        const value = this.inputElement.value;
        if (pos === posEnd) {
            // If there's no selection, insert a space at the cursor position
            const before = value.substring(0, pos);
            const after = value.substring(pos);
            this.inputElement.value = before + ' ' + after;
            // Move the cursor one position to the right
            const newPos = pos + 1;
            this.inputElement.setSelectionRange(newPos, newPos);
        }
        else {
            // If there's a selection, replace the selected text with a space
            const before = value.substring(0, pos);
            const after = value.substring(posEnd);
            this.inputElement.value = before + ' ' + after;
            // Set the cursor to the position after the inserted space
            this.inputElement.setSelectionRange(pos + 1, pos + 1);
        }
        // Refocus the input element to ensure it stays focused
        this.inputElement.focus();
    }
    handleDefaultKeyPress(button, pos, posEnd) {
        if (!this.inputElement || pos === null || posEnd === null)
            return;
        const value = this.inputElement.value;
        // Insert the button at the cursor position
        const before = value.substring(0, pos);
        const after = value.substring(posEnd);
        // Update the input value with the new character
        this.inputElement.value = before + button + after;
        // Update the cursor position explicitly to prevent reset
        const newPos = pos + button.length;
        // Log the cursor position to debug
        //  console.log(`Cursor position before: ${pos}, after: ${newPos}`);
        // Set the new cursor position
        this.inputElement.setSelectionRange(newPos, newPos);
        // Refocus the input element to prevent losing focus
        this.inputElement.focus();
    }
    performNativeKeyPress(element, keyCode) {
        const keydownEvent = new KeyboardEvent('keydown', { keyCode: keyCode, which: keyCode });
        const keypressEvent = new KeyboardEvent('keypress', { keyCode: keyCode, which: keyCode });
        const inputEvent = new Event('input', { bubbles: true });
        element.dispatchEvent(keydownEvent);
        element.dispatchEvent(keypressEvent);
        element.dispatchEvent(inputEvent);
    }
    onFocus1(target) {
        this.inputElement = target;
        if (target.type.toLowerCase() === 'number') {
            this.keyboard.setOptions({
                layout: this.numericLayout,
                layoutName: 'default',
            });
        }
        else {
            this.keyboard.setOptions({
                ...this.languageLayout,
                layoutName: 'default',
            });
        }
        if (this.inputElement.matches('.no-keyboard')) {
            this.showKeyboardToggler();
            return;
        }
        this.hideKeyboardToggler();
        this.showKeyboard();
        const offset = 50;
        const bodyRect = this.document.body.getBoundingClientRect().top;
        const elementRect = this.inputElement.getBoundingClientRect().top;
        const elementPosition = elementRect - bodyRect;
        const offsetPosition = elementPosition - offset;
        window.scrollTo({ top: offsetPosition, behavior: 'smooth' });
    }
    onFocus(target) {
        this.inputElement = target;
        // Check if the target is a text input, number input, or textarea
        if (target.type.toLowerCase() === 'text' || target.type.toLowerCase() === 'number' || target.tagName.toLowerCase() === 'textarea') {
            if (target.type.toLowerCase() === 'number') {
                this.keyboard.setOptions({
                    layout: this.numericLayout,
                    layoutName: 'default',
                });
            }
            else {
                this.keyboard.setOptions({
                    ...this.languageLayout,
                    layoutName: 'default',
                });
            }
            // Show keyboard and handle scrolling
            this.hideKeyboardToggler();
            this.showKeyboard();
            const offset = 50;
            const bodyRect = this.document.body.getBoundingClientRect().top;
            const elementRect = this.inputElement.getBoundingClientRect().top;
            const elementPosition = elementRect - bodyRect;
            const offsetPosition = elementPosition - offset;
            window.scrollTo({ top: offsetPosition, behavior: 'smooth' });
        }
        else {
            this.hideKeyboard();
            this.hideKeyboardToggler();
        }
    }
    showKeyboardToggler() {
        this.renderer.removeClass(this.keyboardToggler.nativeElement, 'hidden');
    }
    hideKeyboardToggler() {
        this.renderer.addClass(this.keyboardToggler.nativeElement, 'hidden');
    }
    toggleKeyboard() {
        if (this.keyboardContainer.nativeElement.style.display === 'none') {
            this.showKeyboard();
        }
    }
    onFocusOut() {
        if (this.inputElement) {
            this.inputElement.blur();
            this.inputElement = null;
        }
        this.hideKeyboard();
        this.hideKeyboardToggler();
    }
    showKeyboard() {
        const dialogs = this.document.querySelectorAll('.fixed-full');
        if (this.keyboardHideTask != null) {
            clearTimeout(this.keyboardHideTask);
            this.keyboardHideTask = null;
        }
        this.renderer.setStyle(this.keyboardContainer.nativeElement, 'display', 'block');
        const keyboardHeight = this.keyboardContainer.nativeElement.offsetHeight;
        const style = `padding-bottom: ${keyboardHeight}px !important`;
        this.renderer.setAttribute(this.document.body, 'style', style);
        dialogs.forEach(dialog => this.renderer.setAttribute(dialog, 'style', style));
    }
    checkKeyboard() {
        if (this.isMouseDown) {
            return;
        }
        const activeElement = this.document.activeElement;
        if (activeElement.matches(this.querySelector)) {
            if (this.inputElement !== activeElement) {
                this.onFocus(activeElement);
            }
        }
        else {
            if (this.inputElement !== null) {
                this.onFocusOut();
            }
        }
    }
    hideKeyboard() {
        this.keyboardHideTask = setTimeout(() => {
            const dialogs = this.document.querySelectorAll('.fixed-full');
            this.renderer.setStyle(this.keyboardContainer.nativeElement, 'display', 'none');
            this.renderer.removeAttribute(this.document.body, 'style');
            this.keyboardHideTask = null;
            dialogs.forEach(dialog => this.renderer.removeAttribute(dialog, 'style'));
        });
    }
    handleShiftPress() {
        this.shiftPressed = !this.shiftPressed;
        this.toggleShiftLayout();
    }
    handleCapsLockPressed() {
        this.toggleShiftLayout();
    }
    disableShiftPress() {
        if (!this.shiftPressed) {
            return;
        }
        this.shiftPressed = false;
        this.toggleShiftLayout();
    }
    toggleShiftLayout() {
        const currentLayout = this.keyboard.options.layoutName;
        const shiftToggle = currentLayout === 'default' ? 'shift' : 'default';
        this.keyboard.setOptions({
            layoutName: shiftToggle,
        });
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.12", ngImport: i0, type: NgxSimpleKeyboardKioskComponent, deps: [{ token: i0.Renderer2 }, { token: CountryService }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.3.12", type: NgxSimpleKeyboardKioskComponent, selector: "ngx-simple-keyboard-kiosk", inputs: { defaultLanguage: "defaultLanguage", secondLanguage: "secondLanguage", removeks: "removeks" }, outputs: { languageChange: "languageChange" }, viewQueries: [{ propertyName: "keyboardContainer", first: true, predicate: ["keyboardContainer"], descendants: true, static: true }, { propertyName: "keyboardToggler", first: true, predicate: ["keyboardToggler"], descendants: true, static: true }], ngImport: i0, template: `
<div id="virtual-keyboard" >

 <div #keyboardContainer>
 
      <div #keyboardToggler id="keyboard-toggler" class="keyboard-wrapper simple-keyboard" (click)="toggleKeyboard()"></div>
    </div>
</div>
  `, isInline: true, styles: ["#virtual-keyboard{top:unset;bottom:0;border-radius:10px 10px 0 0;box-sizing:border-box!important;position:fixed;z-index:20000;width:100%;max-width:1440px;background:#e3e3e3;background:linear-gradient(to right bottom,#eee,#ebebeb,#e8e8e8,#e6e6e6,#e3e3e3);-webkit-box-shadow:inset 1px 1px 0 rgba(255,255,255,.25),0 0 20px -8px rgba(0,0,0,.15);box-shadow:inset 1px 1px #ffffff40,0 0 20px -8px #00000026;left:0;right:0;margin:auto}#virtual-keyboard .keyboard-wrapper{position:relative;background:inherit;width:100%;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;box-sizing:border-box!important}.hg-button-lang{width:200px;height:200px}\n"] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.12", ngImport: i0, type: NgxSimpleKeyboardKioskComponent, decorators: [{
            type: Component,
            args: [{ selector: 'ngx-simple-keyboard-kiosk', template: `
<div id="virtual-keyboard" >

 <div #keyboardContainer>
 
      <div #keyboardToggler id="keyboard-toggler" class="keyboard-wrapper simple-keyboard" (click)="toggleKeyboard()"></div>
    </div>
</div>
  `, styles: ["#virtual-keyboard{top:unset;bottom:0;border-radius:10px 10px 0 0;box-sizing:border-box!important;position:fixed;z-index:20000;width:100%;max-width:1440px;background:#e3e3e3;background:linear-gradient(to right bottom,#eee,#ebebeb,#e8e8e8,#e6e6e6,#e3e3e3);-webkit-box-shadow:inset 1px 1px 0 rgba(255,255,255,.25),0 0 20px -8px rgba(0,0,0,.15);box-shadow:inset 1px 1px #ffffff40,0 0 20px -8px #00000026;left:0;right:0;margin:auto}#virtual-keyboard .keyboard-wrapper{position:relative;background:inherit;width:100%;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;box-sizing:border-box!important}.hg-button-lang{width:200px;height:200px}\n"] }]
        }], ctorParameters: () => [{ type: i0.Renderer2 }, { type: CountryService }, { type: Document, decorators: [{
                    type: Inject,
                    args: [DOCUMENT]
                }] }], propDecorators: { keyboardContainer: [{
                type: ViewChild,
                args: ['keyboardContainer', { static: true }]
            }], keyboardToggler: [{
                type: ViewChild,
                args: ['keyboardToggler', { static: true }]
            }], defaultLanguage: [{
                type: Input
            }], secondLanguage: [{
                type: Input
            }], removeks: [{
                type: Input
            }], languageChange: [{
                type: Output
            }] } });

class NgxSimpleKeyboardKioskModule {
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.12", ngImport: i0, type: NgxSimpleKeyboardKioskModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }
    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "17.3.12", ngImport: i0, type: NgxSimpleKeyboardKioskModule, declarations: [NgxSimpleKeyboardKioskComponent], exports: [NgxSimpleKeyboardKioskComponent] }); }
    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "17.3.12", ngImport: i0, type: NgxSimpleKeyboardKioskModule }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.12", ngImport: i0, type: NgxSimpleKeyboardKioskModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [NgxSimpleKeyboardKioskComponent],
                    imports: [],
                    exports: [NgxSimpleKeyboardKioskComponent]
                }]
        }] });

/*
 * Public API Surface of ngx-simple-keyboard-kiosk
 */

/**
 * Generated bundle index. Do not edit.
 */

export { NgxSimpleKeyboardKioskComponent, NgxSimpleKeyboardKioskModule };
//# sourceMappingURL=ngx-simple-keyboard-kiosk.mjs.map
